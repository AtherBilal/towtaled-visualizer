{"version":3,"sources":["App.js","index.js"],"names":["App","onMapInit","map","a","url","fetch","then","res","json","locations","features","location","olFeature","geometry","olGeomPoint","fromLonLat","long","lat","layer","VectorLayer","title","source","olSourceVector","addLayer","setInterval","timestamp","Date","state","wipeOnRefresh","getSource","clear","addFeatures","window","this","fullScreen","tabIcon","style","padding","fontFamily","label","position","width","React","Component","HotApp","hot","ReactDOM","render","document","getElementById"],"mappings":"gSAgGeA,E,kDAzEb,aAAe,IAAD,8BACZ,gBAKFC,UANc,uCAMF,WAAOC,GAAP,qBAAAC,EAAA,6DAEJC,EAAM,gIAFF,SAGYC,MAAMD,GAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAHvC,OAGNC,EAHM,OAKJC,EAAWD,EAAUP,KAAI,SAACS,GAC9B,OAAO,IAAIC,UAAJ,2BACFD,GADE,IAELE,SAAU,IAAIC,UAAYC,qBAAW,CAACJ,EAASK,KAAML,EAASM,aAG5DC,EAAQ,IAAIC,cAAY,CAC5BC,MAAO,iBACPC,OAAQ,IAAIC,UAAe,CACzBZ,eAIJR,EAAIqB,SAASL,GAoBbM,YAtCU,+BAAArB,EAAA,MAoBW,8BAAAA,EAAA,sEAEGE,MAAOD,GAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAF/B,OAEfC,EAFe,OAKbC,EAAWD,EAAUP,KAAI,SAACS,GAC9B,OAAO,IAAIC,UAAJ,2BACFD,GADE,IAELc,UAAW,IAAIC,KAAKf,EAASc,WAC7BZ,SAAU,IAAIC,UAAYC,qBAAW,CAACJ,EAASK,KAAML,EAASM,aAI9D,EAAKU,MAAMC,eAAeV,EAAMW,YAAYC,QAEhDZ,EAAMW,YAAYE,YAAYrB,GAfX,2CApBX,qDAsCgB,KAE1BsB,OAAO9B,IAAMA,EAxCH,4CANE,sDAEZ,EAAKyB,MAAQ,CACXC,eAAe,GAHL,E,qDAkDZ,OACE,eAAC,MAAD,CAAK3B,UAAWgC,KAAKhC,UAAWiC,YAAU,EAA1C,UACE,cAAC,QAAD,IACA,eAAC,aAAD,WACE,cAAC,iBAAD,CAAgBC,QAAQ,eAAxB,SACE,cAAC,oBAAD,CAAmBC,MAAO,CAAEC,QAAS,MAAOC,WAAY,6BAAxD,SACE,cAAC,cAAD,QAGJ,cAAC,iBAAD,CAAgBC,MAAO,OAAvB,SACE,cAAC,oBAAD,CAAmBH,MAAO,CAAEC,QAAS,MAAOC,WAAY,6BAAxD,SACE,cAAC,gBAAD,CAAeF,MAAO,CAAEI,SAAU,WAAYC,MAAO,iBAI3D,cAAC,cAAD,IACA,cAAC,WAAD,IACA,cAAC,mBAAD,W,GApEUC,IAAMC,WCjBlBC,EAASC,cAAI7C,GAEnB8C,IAASC,OAAO,cAACH,EAAD,IAAYI,SAASC,eAAe,W","file":"static/js/main.45f2e755.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Map,\n  Popup,\n  LayerPanel,\n  Controls,\n  ContextMenu,\n  loadDataLayer,\n  LayerStyler,\n  LayerPanelPage,\n  LayerPanelContent,\n  BasemapContainer,\n  VectorLayer,\n  DrawContainer\n} from '@bayer/ol-kit'\nimport { fromLonLat } from 'ol/proj'\nimport olFeature from 'ol/Feature'\nimport olGeomPoint from 'ol/geom/Point'\nimport olSourceVector from 'ol/source/Vector'\n\nimport LayersIcon from '@material-ui/icons/Layers'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      wipeOnRefresh: true\n    }\n  }\n  onMapInit = async (map) => {\n    // create a vector layer and add to the map\n    const url = 'https://95gc0kospc.execute-api.ca-central-1.amazonaws.com/prod/alerts?radius=450000000&lat=43.7425651&long=-79.2148452&time=1'\n    let locations = await fetch(url).then(res => res.json())\n\n    const features = locations.map((location) => {\n      return new olFeature({\n        ...location,\n        geometry: new olGeomPoint(fromLonLat([location.long, location.lat]))\n      })\n    })\n    const layer = new VectorLayer({\n      title: 'User Locations',\n      source: new olSourceVector({\n        features\n      })\n    })\n\n    map.addLayer(layer)\n\n    const getLocations = async () => {\n      // const url = 'http://localhost:3000/locations'\n      let locations = await fetch (url).then(res => res.json())\n      // locations = [ locations[0] ] // remove this line,\n\n      const features = locations.map((location) => {\n        return new olFeature({\n          ...location,\n          timestamp: new Date(location.timestamp),\n          geometry: new olGeomPoint(fromLonLat([location.long, location.lat]))\n        })\n      })\n\n      if (this.state.wipeOnRefresh) layer.getSource().clear()\n\n      layer.getSource().addFeatures(features)\n    }\n\n    setInterval(getLocations, 30000)\n\n    window.map = map\n  }\n\n  render () {\n    return (\n      <Map onMapInit={this.onMapInit} fullScreen>\n        <Popup />\n        <LayerPanel>\n          <LayerPanelPage tabIcon='Layer Styler'>\n            <LayerPanelContent style={{ padding: '0px', fontFamily: 'Roboto, Arial, sans-serif' }}>\n              <LayerStyler />\n            </LayerPanelContent>\n          </LayerPanelPage>\n          <LayerPanelPage label={'Draw'}>\n            <LayerPanelContent style={{ padding: '0px', fontFamily: 'Roboto, Arial, sans-serif' }}>\n              <DrawContainer style={{ position: 'relative', width: 'auto' }} />\n            </LayerPanelContent>\n          </LayerPanelPage>\n        </LayerPanel>\n        <ContextMenu />\n        <Controls />\n        <BasemapContainer />\n      </Map>\n    )\n  }\n}\n\nexport default App\n","import { hot } from 'react-hot-loader/root'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst HotApp = hot(App)\n\nReactDOM.render(<HotApp />, document.getElementById('root'))\n"],"sourceRoot":""}