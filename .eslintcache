[{"/Users/bilal/Projects/towtaled-visualizer/ol-kit-map/src/index.js":"1","/Users/bilal/Projects/towtaled-visualizer/ol-kit-map/src/App.js":"2"},{"size":214,"mtime":1608761105310,"results":"3","hashOfConfig":"4"},{"size":2520,"mtime":1608765633848,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"kujv3a",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/bilal/Projects/towtaled-visualizer/ol-kit-map/src/index.js",[],["12","13"],"/Users/bilal/Projects/towtaled-visualizer/ol-kit-map/src/App.js",["14"],"import React from 'react'\nimport {\n  Map,\n  Popup,\n  LayerPanel,\n  Controls,\n  ContextMenu,\n  LayerStyler,\n  LayerPanelPage,\n  LayerPanelContent,\n  BasemapContainer,\n  VectorLayer,\n  DrawContainer\n} from '@bayer/ol-kit'\nimport { fromLonLat } from 'ol/proj'\nimport olFeature from 'ol/Feature'\nimport olGeomPoint from 'ol/geom/Point'\nimport olSourceVector from 'ol/source/Vector'\n\nimport LayersIcon from '@material-ui/icons/Layers'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      wipeOnRefresh: true\n    }\n  }\n  onMapInit = async (map) => {\n    // create a vector layer and add to the map\n    const url = 'https://g499yhptoj.execute-api.us-east-1.amazonaws.com/dev/locations'\n    const locations = await fetch(url).then(res => res.json())\n    console.log(locations)\n    const features = locations.map((location) => {\n      return new olFeature({\n        ...location,\n        geometry: new olGeomPoint(fromLonLat([location.long, location.lat]))\n      })\n    })\n    const layer = new VectorLayer({\n      title: 'User Locations',\n      source: new olSourceVector({\n        features\n      })\n    })\n\n    map.addLayer(layer)\n\n    const getLocations = async () => {\n      // const url = 'http://localhost:3000/locations'\n      const locations = await fetch (url).then(res => res.json())\n      console.log(locations)\n\n      const features = locations.map((location) => {\n        return new olFeature({\n          ...location,\n          geometry: new olGeomPoint(fromLonLat([location.long, location.lat]))\n        })\n      })\n\n      if (this.state.wipeOnRefresh) layer.getSource().clear()\n\n      layer.getSource().addFeatures(features)\n    }\n\n    setInterval(getLocations, 3000)\n\n    window.map = map\n  }\n\n  render () {\n    return (\n      <Map onMapInit={this.onMapInit} fullScreen>\n        <Popup />\n        <LayerPanel>\n          <LayerPanelPage tabIcon='Layer Styler'>\n            <LayerPanelContent style={{ padding: '0px', fontFamily: 'Roboto, Arial, sans-serif' }}>\n              <LayerStyler />\n            </LayerPanelContent>\n          </LayerPanelPage>\n          <LayerPanelPage label={'Draw'}>\n            <LayerPanelContent style={{ padding: '0px', fontFamily: 'Roboto, Arial, sans-serif' }}>\n              <DrawContainer style={{ position: 'relative', width: 'auto' }} />\n            </LayerPanelContent>\n          </LayerPanelPage>\n        </LayerPanel>\n        <ContextMenu />\n        <Controls />\n        <BasemapContainer />\n      </Map>\n    )\n  }\n}\n\nexport default App\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":20,"column":8,"nodeType":"21","messageId":"22","endLine":20,"endColumn":18},"no-native-reassign",["23"],"no-negated-in-lhs",["24"],"no-unused-vars","'LayersIcon' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]